name: "xscen Testing Suite"

on:
  push:
    branches:
      - main
    paths-ignore:
      - .cruft.json
      - CHANGELOG.rst
      - README.rst
      - pyproject.toml
      - src/xscen/__init__.py
  pull_request:

concurrency:
  # For a given workflow, if we push to the same branch, cancel all previous builds on that branch except on main.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: read

jobs:
  lint:
    name: Lint (Python${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.x"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Setup Python${{ matrix.python-version }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Run linting suite
        run: |
          python -m tox -e lint

  test-pypi:
    name: Test with Python${{ matrix.python-version }} (tox, ${{ matrix.os }})
    needs: lint
    runs-on: ${{ matrix.os }}
    env:
      COVERALLS_PARALLEL: true
      COVERALLS_SERVICE_NAME: github
      esmf-version: 8.4.2
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.10", "3.11", "3.12" ] # "3.13"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Setup Conda (Micromamba) with Python ${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@f8b8a1e23a26f60a44c853292711bacfd3eac822 # v1.9.0
        with:
          cache-downloads: true
          environment-name: xscen-pypi
          create-args: >-
            esmf=${{ env.esmf-version }}
            python=${{ matrix.python-version }}
            tox>=4.17.1
            tox-gh>=1.3.2
          # FIXME: https://github.com/mamba-org/setup-micromamba/issues/225
          micromamba-version: "1.5.10-0"  # pinned to avoid the breaking changes with mamba and micromamba (2.0.0).
      - name: Environment Caching
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: .tox
          key: ${{ matrix.os }}-Python${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}
      - name: Test with tox
        run: |
          python -m tox
        env:
          ESMF_VERSION: ${{ env.esmf-version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-Python${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

#      - name: Install esmpy
#        run: |
#          pip install git+https://github.com/esmf-org/esmf.git@v${{ matrix.esmf-version }}#subdirectory=src/addon/esmpy
#      - name: Install xscen
#        run: |
#          pip install --editable ".[dev]"
#      - name: Check versions
#        run: |
#          pip list
#          pip check
#      - name: Test with pytest
#        run: |
#          pytest tests
#      - name: Report coverage
#        run: |
#          coveralls
#        env:
#          ESMF_VERSION: ${{ matrix.esmf-version }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          COVERALLS_FLAG_NAME: run-Python${{ matrix.python-version }}
#          COVERALLS_PARALLEL: true
#          COVERALLS_SERVICE_NAME: github

  test-conda:
    name: Test with Python${{ matrix.python-version }} (Anaconda, ${{ matrix.os }})
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.10", "3.11", "3.12" ] # "3.13"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Setup Conda (Micromamba) with Python ${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@f8b8a1e23a26f60a44c853292711bacfd3eac822 # v1.9.0
        with:
          cache-downloads: true
          cache-environment: false  # FIXME: No environment caching until issues with micromamba 2.0.0 are resolved.
          environment-file: environment-dev.yml
          create-args: >-
            python=${{ matrix.python-version }}
          # FIXME: https://github.com/mamba-org/setup-micromamba/issues/225
          micromamba-version: "1.5.10-0"  # pinned to avoid the breaking changes with mamba and micromamba (2.0.0).
      - name: Conda and Mamba versions
        run: |
          echo "micromamba $(micromamba --version)"
      - name: Compile catalogs and install xscen
        run: |
          make translate
          python -m pip install --no-user --no-deps .
      - name: Check versions
        run: |
          micromamba list
          python -m pip check || true
      - name: Test with pytest
        run: |
          python -m pytest
      - name: Report Coverage
        run: |
          python -m coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-Python${{ matrix.python-version }}-conda
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

  finish:
    needs:
      - test-pypi
      - test-conda
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Coveralls Finished
        uses: coverallsapp/github-action@643bc377ffa44ace6394b2b5d0d3950076de9f63 # v2.3.0
        with:
          parallel-finished: true
