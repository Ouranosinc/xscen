[build-system]
requires = [
  "setuptools>=60",
  "setuptools-scm>=8.0",
  "babel",
  "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "xscen"
authors = [
  {name = "Gabriel Rondeau-Genesse", email = "rondeau-genesse.gabriel@ouranos.ca"}
]
maintainers = []
description = "A climate change scenario-building analysis framework, built with xclim/xarray."
readme = "README.rst"
requires-python = ">=3.9.0"
keywords = ["xscen"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering :: Atmospheric Science"
]
dynamic = ["version"]
dependencies = [
  "babel",
  "cartopy",
  "cftime",
  "cf_xarray>=0.7.6",
  "clisops>=0.10",
  "dask",
  "flox",
  "fsspec<2023.10.0",
  "geopandas",
  "h5netcdf",
  "h5py",
  "intake-esm>=2023.07.07",
  "matplotlib",
  "netCDF4",
  "numpy",
  "pandas>=2.0",
  "parse",
  # Used when opening catalogs.
  "pyarrow",
  "pyyaml",
  "rechunker",
  "shapely>=2.0",
  "sparse<=0.14",
  "toolz",
  "xarray<2023.11.0", # FIXME: Remove when pandas 2.2 is released and xclim is fixed.
  "xclim>=0.46.0",
  "xesmf>=0.7",
  "zarr"
]

[project.optional-dependencies]
dev = [
  # Dev tools and testing
  "pip>=23.1.2",
  "black>=23.11.0",
  "blackdoc>=0.3.9",
  "bump-my-version>=0.12.0",
  "coverage>=6.2.2,<7.0.0",
  "coveralls>=3.3.1",
  "flake8-alphabetize>=0.0.21",
  "flake8-rst-docstrings>=0.3.0",
  "flake8>=6.1.0",
  "isort>=5.12.0",
  "pooch",
  "pre-commit>=3.3.2",
  "pytest-cov>=4.0.0",
  "pytest>=7.3.1",
  "ruff>=0.1.0",
  "tox>=4.5.1",
  "watchdog>=3.0.0",
  "xdoctest"
]
docs = [
  # Documentation and examples
  "ipykernel",
  "ipython",
  "jupyter_client",
  "nbsphinx",
  "nbval",
  "sphinx",
  "sphinx-autoapi",
  "sphinx-codeautolink",
  "sphinx-copybutton",
  "sphinx-rtd-theme>=1.0",
  "sphinxcontrib-napoleon"
]

[project.urls]
"About Ouranos" = "https://www.ouranos.ca/en/"
"Changelog" = "https://xscen.readthedocs.io/en/stable/changes.html"
"Homepage" = "https://xscen.readthedocs.io/"
"Issue tracker" = "https://github.com/Ouranosinc/xscen/issues"
"Source" = "https://github.com/Ouranosinc/xscen"

[tool]

[tool.black]
target-version = [
  "py39",
  "py310",
  "py311"
]

[tool.bumpversion]
current_version = "0.8.0"
commit = true
tag = false
tag_name = "{new_version}"
allow_dirty = false
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+).(?P<patch>\\d+)(\\-(?P<release>\\d+))?"
serialize = [
  "{major}.{minor}.{patch}-{release}",
  "{major}.{minor}.{patch}"
]

[[tool.bumpversion.files]]
filename = "xscen/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "tests/test_xscen.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = ".cruft.json"
search = "\"version\": \"{current_version}\""
replace = "\"version\": \"{new_version}\""

[tool.bumpversion.parts.release]
optional_value = "gamma"
values = [
  "beta",
  "gamma"
]

[tool.coverage.run]
relative_files = true
include = ["xscen/*"]
omit = ["docs/notebooks/*.ipynb", "tests/*.py"]

[tool.isort]
append_only = true
known_first_party = "xscen"
profile = "black"
py_version = 39

[tool.mypy]
python_version = 3.9
show_error_codes = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--cov=xscen",
  "--ignore-glob='*.ipynb_checkpoints'",
  "--strict-markers",
  "--verbose"
]
filterwarnings = ["ignore::UserWarning"]
testpaths = "tests"
markers = ["requires_netcdf: marks tests that require netcdf files to run"]

[tool.ruff]
src = [""]
line-length = 150
target-version = "py39"
exclude = [
  ".eggs",
  ".git",
  "build",
  "docs"
]
ignore = [
  "D205",
  "D400",
  "D401"
]
select = [
  "C9",
  "D",
  "E",
  "F",
  "W"
]

[tool.ruff.flake8-bandit]
check-typed-exception = true

[tool.ruff.format]
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["xscen"]
case-sensitive = true
detect-same-package = false
lines-after-imports = 1
no-lines-before = ["future", "standard-library"]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.per-file-ignores]
"xscen/**/__init__.py" = ["F401", "F403"]
"tests/**/*.py" = ["D100", "D101", "D102", "D103"]

[tool.ruff.pycodestyle]
max-doc-length = 180

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.setuptools]
license-files = ["LICENSE"]
include-package-data = true

[tool.setuptools.dynamic]
version = {attr = "xscen.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["xscen"]

# [tool.setuptools.packages.find]
# include = [
# ".zenodo.json",
# "AUTHORS.rst",
# "CHANGES.rst",
# "CONTRIBUTING.rst",
# "LICENSE",
# "Makefile",
# "README.rst",
# "docs/*.rst",
# "docs/Makefile",
# "docs/_static/_images/*.png",
# "docs/conf.py",
# "docs/make.bat",
# "docs/notebooks/.ipynb",
# "docs/notebooks/samples/*.csv",
# "docs/notebooks/samples/*.json",
# "docs/notebooks/samples/*.yml",
# "environment.yml",
# "environment-dev.yml",
# "setup.cfg",
# "setup.py",
# "tests/*.py",
# "xscen/**/*.py",
# "xscen/**/*.yml",
# "xscen/CVs/*.json",
# "xscen/data/*.csv",
# "xscen/data/**/*.mo",
# "xscen/data/**/*.po",
# "tox.ini"
# ]
# exclude = [
# "*.py[co]",
# "__pycache__",
# ".coveralls.yml",
# ".editorconfig",
# ".flake8",
# ".gitignore",
# ".pre-commit-config.yaml",
# ".readthedocs.yml",
# ".yamllint.yaml",
# "conda/xscen/*.yml",
# "docs/_*",
# "docs/apidoc/modules.rst",
# "docs/apidoc/xscen*.rst",
# "docs/notesbnooks/samples/tutorial/**/*.nc",
# "templates"
# ]
